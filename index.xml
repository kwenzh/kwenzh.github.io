<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>kwen hugo</title>
        <link>https://kwenzh.github.io/</link>
        <description>Hugo theme - LoveIt</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>yukunzhang29@hotmail.com (kwen zh)</managingEditor>
            <webMaster>yukunzhang29@hotmail.com (kwen zh)</webMaster><lastBuildDate>Wed, 06 Mar 2024 21:59:29 &#43;0800</lastBuildDate>
            <atom:link href="https://kwenzh.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Golang defer执行机制</title>
    <link>https://kwenzh.github.io/posts/2024-03-07-golang-defer%E6%9C%BA%E5%88%B6/</link>
    <pubDate>Wed, 06 Mar 2024 21:59:29 &#43;0800</pubDate>
    <author>kwen zh</author>
    <guid>https://kwenzh.github.io/posts/2024-03-07-golang-defer%E6%9C%BA%E5%88%B6/</guid>
    <description><![CDATA[描述 下面golang代码的输出是？ func test_defer1() (err error) { defer func() { fmt.Println(&#34;&gt;&gt;&gt;a&#34;, err) err = errors.New(&#34;a&#34;) }() defer func(e error) { fmt.Println(&#34;&gt;&gt;&gt;b&#34;, e) e = errors.New(&#34;b&#34;) }(err) return errors.New(&#34;c&#34;) } func TestDemo(t *testing.T) { fmt.Println(&#34;&gt;&gt;&gt; in main &#34;, test_defer1()) } 结论是 &gt;&gt;&gt;b &lt;nil&gt; &gt;&gt;&gt;a c &gt;&gt;&gt; in main a 必要概念 golang]]></description>
</item>
<item>
    <title>Golang自定义error采坑</title>
    <link>https://kwenzh.github.io/posts/02-29-test/</link>
    <pubDate>Wed, 28 Feb 2024 21:59:29 &#43;0800</pubDate>
    <author>kwen zh</author>
    <guid>https://kwenzh.github.io/posts/02-29-test/</guid>
    <description><![CDATA[描述 自定义一个实现 error的类型，返回赋值给error :interface{}， 判断 err ！= nil 成立，但是使用是空指针。 type kwen_error struct { msg string code int } func (k]]></description>
</item>
<item>
    <title>Shell反弹攻击</title>
    <link>https://kwenzh.github.io/posts/2024-02-28-test_post/</link>
    <pubDate>Wed, 28 Feb 2024 21:59:29 &#43;0800</pubDate>
    <author>kwen zh</author>
    <guid>https://kwenzh.github.io/posts/2024-02-28-test_post/</guid>
    <description><![CDATA[描述 在一台内网通外网的机器发现，没有限制出网策略，被外部注入反弹拿下了主机 验证复现 攻击者在互联网上的一台计算机上启动一个监听程序，通常使用诸]]></description>
</item>
<item>
    <title>NTP放大攻击</title>
    <link>https://kwenzh.github.io/posts/fist_post/</link>
    <pubDate>Wed, 28 Feb 2024 21:50:25 &#43;0800</pubDate>
    <author>kwen zh</author>
    <guid>https://kwenzh.github.io/posts/fist_post/</guid>
    <description><![CDATA[NTP放大攻击 来自一次线上的服务被ddos，机房封了ip，反馈有5Gbps流量多，平时正常也就不到1Gbps的流量，后面根据机房日志看，源端]]></description>
</item>
</channel>
</rss>
